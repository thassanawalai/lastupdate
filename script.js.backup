// ตัวแปรเก็บข้อมูลการประเมิน
const assessmentData = {
  personalInfo: {
    nickname: '',
    age: '',
    gender: '',
    occupation: ''
  },
  reflection: {
    selectedQuote: '',
    feelings: []
  },
  st5: {
    q1: null,
    q2: null,
    q3: null,
    q4: null,
    q5: null,
    total: 0,
    level: ''
  },
  twoQ: {
    q1: null,
    q2: null,
    hasRisk: false
  },
  nineQ: {
    q1: null,
    q2: null,
    q3: null,
    q4: null,
    q5: null,
    q6: null,
    q7: null,
    q8: null,
    q9: null,
    total: 0,
    level: ''
  },
  eightQ: {
    q1: null,
    q2: null,
    q3: null,
    q4: null,
    q5: null,
    q6: null,
    q7: null,
    q8: null,
    total: 0,
    level: ''
  }
};

// DOM Elements
const elements = {
  pages: document.querySelectorAll('.page'),
  optionButtons: document.querySelectorAll('.option-btn'),
  feelingOptions: document.querySelectorAll('.feeling-option'),
  checkboxes: document.querySelectorAll('input[type="checkbox"]'),
  textInputs: document.querySelectorAll('input[type="text"], input[type="number"]'),
  selects: document.querySelectorAll('select'),
  forms: document.querySelectorAll('form')
};

// ฟังก์ชัน Utility
const utils = {
  // ตรวจสอบว่าหน้านี้ตอบครบทุกคำถามแล้วหรือไม่
  isPageComplete: (pageId) => {
    switch(pageId) {
      case 'personal-info-page':
        return !!assessmentData.personalInfo.nickname;
      
      case 'st5-page':
        return Object.values(assessmentData.st5).every(
          (val, i) => i > 4 || (val !== null && val !== undefined)
        );
      
      case '2q-page':
        return assessmentData.twoQ.q1 !== null && assessmentData.twoQ.q2 !== null;
      
      case '9q-page':
        return Object.values(assessmentData.nineQ).every(
          (val, i) => i > 8 || (val !== null && val !== undefined)
        );
      
      case '8q-page':
        return Object.values(assessmentData.eightQ).every(
          (val, i) => i > 7 || (val !== null && val !== undefined)
        );
      
      default:
        return true;
    }
  },
  
  // บันทึกข้อมูลจากฟอร์มปัจจุบัน
  saveFormData: (pageId) => {
    const form = document.querySelector(`#${pageId} form`);
    if (!form) return;
    
    const formData = new FormData(form);
    for (let [key, value] of formData.entries()) {
      // บันทึกข้อมูลตามโครงสร้าง assessmentData
      const keys = key.split('.');
      let target = assessmentData;
      
      for (let i = 0; i < keys.length - 1; i++) {
        target = target[keys[i]];
      }
      
      // แปลงค่าสำหรับ checkbox และ radio
      if (value === 'on') {
        value = formData.get(key) !== null;
      }
      
      target[keys[keys.length - 1]] = value;
    }
  },
  
  // แสดง/ซ่อนปุ่มถัดไปตามความสมบูรณ์ของหน้า
  toggleNextButton: (pageId) => {
    const nextButton = document.querySelector(`#${pageId} .next-btn`);
    if (nextButton) {
      nextButton.disabled = !utils.isPageComplete(pageId);
    }
  }
};

// ฟังก์ชันเปลี่ยนหน้า
function showPage(pageId) {
  // บันทึกข้อมูลก่อนออกจากหน้าปัจจุบัน
  const currentPage = document.querySelector('.page.active');
  if (currentPage) {
    utils.saveFormData(currentPage.id);
  }
  
  // ซ่อนทุกหน้าแล้วแสดงหน้าที่ต้องการ
  elements.pages.forEach(page => {
    page.classList.remove('active');
  });
  
  const targetPage = document.getElementById(pageId);
  if (targetPage) {
    targetPage.classList.add('active');
    window.scrollTo(0, 0);
    
    // อัพเดทปุ่มนำทาง
    utils.toggleNextButton(pageId);
    
    // หากเป็นหน้าผลลัพธ์ ให้คำนวณคะแนนใหม่
    if (pageId.endsWith('-result-page') || pageId === 'final-result-page') {
      updateResultPages();
    }
  }
}

// ฟังก์ชันคำนวณและอัพเดทหน้าผลลัพธ์ทั้งหมด
function updateResultPages() {
  if (assessmentData.st5.q1 !== null) {
    calculateST5Score();
  }
  
  if (assessmentData.twoQ.q1 !== null) {
    calculate2QScore();
  }
  
  if (assessmentData.nineQ.q1 !== null) {
    calculate9QScore();
  }
  
  if (assessmentData.eightQ.q1 !== null) {
    calculate8QScore();
  }
  
  showFinalResult();
}

// ฟังก์ชันคำนวณคะแนน ST-5
function calculateST5Score() {
  const st5 = assessmentData.st5;
  st5.total = st5.q1 + st5.q2 + st5.q3 + st5.q4 + st5.q5;

  if (st5.total <= 4) st5.level = 'น้อย';
  else if (st5.total <= 7) st5.level = 'ปานกลาง';
  else if (st5.total <= 9) st5.level = 'มาก';
  else st5.level = 'มากที่สุด';

  const st5Message = document.getElementById('st5-message');
  const nextStep = document.getElementById('st5-next-step');

  if (st5.total <= 7) {
    st5Message.innerHTML = `
      <h3>ระดับความเครียด: ${st5.level}</h3>
      <p>คะแนนรวม: ${st5.total}</p>
      <p>จากคำตอบที่คุณให้มา ดูเหมือนว่าคุณยังสามารถรับมือกับความเครียดได้ดีอยู่</p>
      <p>แต่ถึงแม้ทุกอย่างดูเหมือนจะโอเค คุณก็ยังมีสิทธิ์เหนื่อย มีสิทธิ์พัก และมีสิทธิ์พูดว่า "ไม่ไหว" ได้เสมอ</p>
    `;
    nextStep.innerHTML = `
      <div class="result-message result-level-1">
        <p>คุณสามารถจบการประเมินที่นี่ หรือทำต่อเพื่อประเมินภาวะซึมเศร้าเบื้องต้น</p>
      </div>
    `;
    document.getElementById('to-final-result').style.display = 'inline-block';
    document.getElementById('to-2q-page').style.display = 'inline-block';
  } else {
    st5Message.innerHTML = `
      <h3>ระดับความเครียด: ${st5.level}</h3>
      <p>คะแนนรวม: ${st5.total}</p>
      <p>จากคำตอบที่คุณให้มา ดูเหมือนว่าคุณกำลังเผชิญกับความเครียดระดับสูง</p>
      <p>เราอยากชวนคุณทำแบบประเมินต่อเพื่อประเมินภาวะซึมเศร้าเบื้องต้น</p>
    `;
    nextStep.innerHTML = `
      <div class="result-message result-level-2">
        <p>โปรดทำแบบประเมินต่อเพื่อประเมินภาวะซึมเศร้าเบื้องต้น</p>
      </div>
    `;
    document.getElementById('to-final-result').style.display = 'none';
    document.getElementById('to-2q-page').style.display = 'inline-block';
  }
}

// ฟังก์ชันคำนวณคะแนน 2Q
function calculate2QScore() {
  const twoQ = assessmentData.twoQ;
  twoQ.hasRisk = twoQ.q1 || twoQ.q2;

  const twoQMessage = document.getElementById('2q-message');
  const nextStep = document.getElementById('2q-next-step');

  if (!twoQ.hasRisk) {
    twoQMessage.innerHTML = `
      <h3>ผลประเมิน 2Q</h3>
      <p>จากคำตอบของคุณตอนนี้ยังไม่พบสัญญาณที่เข้าข่ายภาวะซึมเศร้า</p>
      <p>แต่นั่นไม่ได้แปลว่าคุณต้องรู้สึกดีตลอดเวลา การเผชิญปัญหาและการจัดการอารมณ์ได้ดี เป็นสิ่งที่ดี</p>
    `;
    nextStep.innerHTML = `
      <div class="result-message result-level-1">
        <p>คุณสามารถจบการประเมินที่นี่ได้</p>
      </div>
    `;
    document.getElementById('to-final-result-from-2q').style.display = 'inline-block';
    document.getElementById('to-9q-page').style.display = 'none';
  } else {
    twoQMessage.innerHTML = `
      <h3>ผลประเมิน 2Q</h3>
      <p>จากคำตอบของคุณ...ดูเหมือนภายในใจของคุณกำลังบอกอะไรบางอย่างกับเรา</p>
      <p>บางที คุณอาจกำลังต้องการให้ใครสักคน "ที่รับฟังอย่างเข้าใจ"</p>
    `;
    nextStep.innerHTML = `
      <div class="result-message result-level-2">
        <p>โปรดทำแบบประเมินต่อเพื่อประเมินภาวะซึมเศร้า (9Q)</p>
      </div>
    `;
    document.getElementById('to-final-result-from-2q').style.display = 'none';
    document.getElementById('to-9q-page').style.display = 'inline-block';
  }
}

// ฟังก์ชันคำนวณคะแนน 9Q
function calculate9QScore() {
  const nineQ = assessmentData.nineQ;
  nineQ.total = Object.values(nineQ).reduce((sum, val) => typeof val === 'number' ? sum + val : sum, 0);

  if (nineQ.total < 7) nineQ.level = 'ไม่มีอาการหรือมีอาการน้อยมาก';
  else if (nineQ.total <= 12) nineQ.level = 'มีอาการระดับน้อย';
  else if (nineQ.total <= 18) nineQ.level = 'มีอาการระดับปานกลาง';
  else nineQ.level = 'มีอาการระดับรุนแรง';

  const nineQMessage = document.getElementById('9q-message');
  const nextStep = document.getElementById('9q-next-step');

  nineQMessage.innerHTML = `
    <h3>ผลประเมินภาวะซึมเศร้า (9Q)</h3>
    <p>ระดับอาการ: ${nineQ.level}</p>
    <p>คะแนนรวม: ${nineQ.total}</p>
  `;

  if (nineQ.total < 7) {
    nextStep.innerHTML = `
      <div class="result-message result-level-1">
        <p>คุณสามารถจบการประเมินที่นี่ได้</p>
      </div>
    `;
    document.getElementById('to-final-result-from-9q').style.display = 'inline-block';
    document.getElementById('to-8q-page').style.display = 'none';
  } else {
    const levelClass = nineQ.total <= 12 ? 'result-level-2' : 
                     nineQ.total <= 18 ? 'result-level-3' : 'result-level-4';
    nextStep.innerHTML = `
      <div class="result-message ${levelClass}">
        <p>แบบประเมินเมื่อครู่บอกเราว่า...ตอนนี้คุณอาจกำลังเผชิญกับความรู้สึกเศร้าในระดับที่ไม่ง่ายนัก</p>
        <p>เราอยากชวนคุณทำแบบประเมินต่อเพื่อประเมินแนวโน้มการฆ่าตัวตาย (8Q)</p>
      </div>
    `;
    document.getElementById('to-final-result-from-9q').style.display = 'none';
    document.getElementById('to-8q-page').style.display = 'inline-block';
  }
}

// ฟังก์ชันคำนวณคะแนน 8Q
function calculate8QScore() {
  const eightQ = assessmentData.eightQ;
  eightQ.total = Object.values(eightQ).reduce((sum, val) => typeof val === 'number' ? sum + val : sum, 0);

  if (eightQ.total <= 8) eightQ.level = 'มีความเสี่ยงน้อย';
  else if (eightQ.total <= 16) eightQ.level = 'มีความเสี่ยงปานกลาง';
  else eightQ.level = 'มีความเสี่ยงสูง';

  const eightQMessage = document.getElementById('8q-message');

  eightQMessage.innerHTML = `
    <h3>ผลประเมินแนวโน้มการฆ่าตัวตาย (8Q)</h3>
    <p>ระดับความเสี่ยง: ${eightQ.level}</p>
    <p>คะแนนรวม: ${eightQ.total}</p>
  `;

  if (eightQ.total > 16) {
    eightQMessage.innerHTML += `
      <div class="emergency-contact">
        <p style="color: var(--accent-color); font-weight: bold;">
          เราขอแนะนำให้คุณพบผู้เชี่ยวชาญเพื่อรับคำปรึกษาและความช่วยเหลือทันที
        </p>
        <p>สายด่วนสุขภาพจิต 1323</p>
        <p>ศูนย์ช่วยเหลือชีวิต 1669</p>
      </div>
    `;
  }
}

// ฟังก์ชันแสดงผลลัพธ์สรุป
function showFinalResult() {
  const finalResult = document.getElementById('final-result-content');
  let resultHTML = '';

  // แสดงข้อมูลส่วนตัว
  if (assessmentData.personalInfo.nickname) {
    resultHTML += `
      <div class="user-info">
        <h3>ข้อมูลส่วนตัว</h3>
        <p>ชื่อเล่น: ${assessmentData.personalInfo.nickname}</p>
        ${assessmentData.personalInfo.age ? `<p>อายุ: ${assessmentData.personalInfo.age}</p>` : ''}
        ${assessmentData.personalInfo.gender ? `<p>เพศ: ${assessmentData.personalInfo.gender}</p>` : ''}
        ${assessmentData.personalInfo.occupation ? `<p>อาชีพ: ${assessmentData.personalInfo.occupation}</p>` : ''}
      </div>
    `;
  }

  // แสดงผล ST-5
  const st5 = assessmentData.st5;
  if (st5.q1 !== null) {
    const st5LevelClass = st5.total <= 4 ? 'result-level-1' : 
                         st5.total <= 7 ? 'result-level-2' : 
                         st5.total <= 9 ? 'result-level-3' : 'result-level-4';
    resultHTML += `
      <div class="result-message ${st5LevelClass}">
        <h3>ผลประเมินความเครียด (ST-5)</h3>
        <p>ระดับความเครียด: ${st5.level}</p>
        <p>คะแนนรวม: ${st5.total}</p>
      </div>
    `;
  }

  // แสดงผล 2Q ถ้ามี
  if (assessmentData.twoQ.q1 !== null) {
    const twoQLevelClass = !assessmentData.twoQ.hasRisk ? 'result-level-1' : 'result-level-2';
    resultHTML += `
      <div class="result-message ${twoQLevelClass}">
        <h3>ผลประเมินภาวะซึมเศร้าเบื้องต้น (2Q)</h3>
        <p>${!assessmentData.twoQ.hasRisk ? 'ไม่พบสัญญาณภาวะซึมเศร้า' : 'พบสัญญาณภาวะซึมเศร้าเบื้องต้น'}</p>
      </div>
    `;
  }

  // แสดงผล 9Q ถ้ามี
  if (assessmentData.nineQ.q1 !== null) {
    const nineQ = assessmentData.nineQ;
    const nineQLevelClass = nineQ.total < 7 ? 'result-level-1' : 
                           nineQ.total <= 12 ? 'result-level-2' : 
                           nineQ.total <= 18 ? 'result-level-3' : 'result-level-4';
    resultHTML += `
      <div class="result-message ${nineQLevelClass}">
        <h3>ผลประเมินภาวะซึมเศร้า (9Q)</h3>
        <p>ระดับอาการ: ${nineQ.level}</p>
        <p>คะแนนรวม: ${nineQ.total}</p>
      </div>
    `;
  }

  // แสดงผล 8Q ถ้ามี
  if (assessmentData.eightQ.q1 !== null) {
    const eightQ = assessmentData.eightQ;
    const eightQLevelClass = eightQ.total <= 8 ? 'result-level-1' : 
                            eightQ.total <= 16 ? 'result-level-2' : 'result-level-4';
    resultHTML += `
      <div class="result-message ${eightQLevelClass}">
        <h3>ผลประเมินแนวโน้มการฆ่าตัวตาย (8Q)</h3>
        <p>ระดับความเสี่ยง: ${eightQ.level}</p>
        <p>คะแนนรวม: ${eightQ.total}</p>
      </div>
    `;
  }

  // แสดงคำแนะนำตามระดับความเสี่ยง
  resultHTML += `<div class="recommendation-section">`;
  
  if (assessmentData.eightQ.q1 !== null && assessmentData.eightQ.total > 16) {
    resultHTML += `
      <div class="result-message result-level-4">
        <h3>คำแนะนำ</h3>
        <p>จากผลประเมิน เราขอแนะนำให้คุณพบผู้เชี่ยวชาญด้านสุขภาพจิตทันที</p>
        <p><strong>สายด่วนสุขภาพจิต: 1323</strong></p>
        <p><strong>ศูนย์ช่วยเหลือชีวิต: 1669</strong></p>
        <p>คุณไม่ได้อยู่คนเดียว และมีความช่วยเหลือพร้อมสนับสนุนคุณเสมอ</p>
      </div>
    `;
  } else if (assessmentData.nineQ.q1 !== null && assessmentData.nineQ.total > 12) {
    resultHTML += `
      <div class="result-message result-level-3">
        <h3>คำแนะนำ</h3>
        <p>จากผลประเมิน เราขอแนะนำให้คุณปรึกษาผู้เชี่ยวชาญด้านสุขภาพจิต</p>
        <p>คุณสามารถติดต่อสายด่วนสุขภาพจิต 1323 เพื่อขอคำปรึกษา</p>
        <p>การพูดคุยกับผู้เชี่ยวชาญสามารถช่วยให้คุณเข้าใจและจัดการกับความรู้สึกได้ดีขึ้น</p>
      </div>
    `;
  } else if (assessmentData.st5.q1 !== null && assessmentData.st5.total > 7) {
    resultHTML += `
      <div class="result-message result-level-2">
        <h3>คำแนะนำ</h3>
        <p>คุณกำลังเผชิญกับความเครียดระดับสูง</p>
        <p>ลองหาวิธีผ่อนคลายที่เหมาะกับคุณ เช่น:</p>
        <ul>
          <li>การนั่งสมาธิหรือฝึกการหายใจ</li>
          <li>ออกกำลังกายเบาๆ เช่น โยคะ หรือเดินในธรรมชาติ</li>
          <li>พูดคุยกับคนที่คุณไว้ใจ</li>
          <li>จัดสรรเวลาพักผ่อนให้เพียงพอ</li>
        </ul>
      </div>
    `;
  } else {
    resultHTML += `
      <div class="result-message result-level-1">
        <h3>คำแนะนำทั่วไป</h3>
        <p>คุณสามารถรับมือกับความเครียดได้ดี</p>
        <p>แต่จำไว้ว่าการดูแลจิตใจเป็นสิ่งสำคัญ แม้ในวันที่คุณรู้สึกดี:</p>
        <ul>
          <li>หมั่นสังเกตอารมณ์ความรู้สึกของตัวเอง</li>
          <li>หางานอดิเรกที่ช่วยให้คุณรู้สึกผ่อนคลาย</li>
          <li>รักษาสมดุลระหว่างงานและการพักผ่อน</li>
        </ul>
      </div>
    `;
  }
  
  resultHTML += `</div>`;

  finalResult.innerHTML = resultHTML;

  // กำหนดปุ่มย้อนกลับที่เหมาะสม
  const backButton = document.getElementById('back-to-previous-result');
  if (backButton) {
    if (assessmentData.eightQ.q1 !== null) {
      backButton.onclick = () => showPage('8q-result-page');
    } else if (assessmentData.nineQ.q1 !== null) {
      backButton.onclick = () => showPage('9q-result-page');
    } else if (assessmentData.twoQ.q1 !== null) {
      backButton.onclick = () => showPage('2q-result-page');
    } else if (assessmentData.st5.q1 !== null) {
      backButton.onclick = () => showPage('st5-result-page');
    } else {
      backButton.style.display = 'none';
    }
  }
}

// ฟังก์ชันรีเซ็ตแบบประเมิน
function resetAssessment() {
  // รีเซ็ตข้อมูล
  for (const key in assessmentData) {
    if (typeof assessmentData[key] === 'object') {
      for (const subKey in assessmentData[key]) {
        if (Array.isArray(assessmentData[key][subKey])) {
          assessmentData[key][subKey] = [];
        } else if (typeof assessmentData[key][subKey] === 'number') {
          assessmentData[key][subKey] = 0;
        } else {
          assessmentData[key][subKey] = null;
        }
      }
    }
  }

  // รีเซ็ตฟอร์ม
  elements.textInputs.forEach(input => input.value = '');
  elements.selects.forEach(select => select.selectedIndex = 0);
  elements.checkboxes.forEach(checkbox => checkbox.checked = false);
  elements.optionButtons.forEach(btn => btn.classList.remove('selected'));
  elements.feelingOptions.forEach(option => option.classList.remove('selected'));

  // กลับไปหน้าแรก
  showPage('welcome-page');
}

// ฟังก์ชันตั้งค่า Event Listeners
function setupEventListeners() {
  // ควบคุมเพลงพื้นหลัง
  const bgMusic = document.getElementById('bg-music');
  const musicControl = document.getElementById('music-control');
  let isMusicPlaying = false;

  if (musicControl && bgMusic) {
    musicControl.addEventListener('click', () => {
      if (isMusicPlaying) {
        bgMusic.pause();
        musicControl.innerHTML = '<i class="fas fa-music"></i> เปิดเพลง';
      } else {
        bgMusic.play();
        musicControl.innerHTML = '<i class="fas fa-pause"></i> ปิดเพลง';
      }
      isMusicPlaying = !isMusicPlaying;
    });
  }

  // ปุ่มเริ่มทำแบบประเมิน
  document.getElementById('start-btn')?.addEventListener('click', () => {
    showPage('personal-info-page');
  });

  // ปุ่มย้อนกลับไปหน้าแรก
  document.getElementById('back-to-welcome')?.addEventListener('click', () => {
    if (confirm('คุณต้องการออกจากการประเมินหรือไม่? ข้อมูลที่กรอกจะไม่ถูกบันทึก')) {
      resetAssessment();
    }
  });

  // ปุ่มรีเซ็ตแบบประเมิน
  document.getElementById('reset-assessment')?.addEventListener('click', () => {
    if (confirm('คุณต้องการเริ่มทำแบบประเมินใหม่ทั้งหมดหรือไม่?')) {
      resetAssessment();
    }
  });

  // ติดตามการเปลี่ยนแปลงในฟอร์มข้อมูลส่วนตัว
  document.getElementById('nickname')?.addEventListener('input', (e) => {
    assessmentData.personalInfo.nickname = e.target.value.trim();
    utils.toggleNextButton('personal-info-page');
  });

  // ติดตามการเปลี่ยนแปลงในแบบประเมิน ST-5
  document.querySelectorAll('#st5-page .option-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const questionNum = btn.dataset.question;
      const value = parseInt(btn.dataset.value);
      assessmentData.st5[questionNum] = value;
      utils.toggleNextButton('st5-page');
    });
  });

  // ติดตามการเปลี่ยนแปลงในแบบประเมิน 2Q
  document.querySelectorAll('#2q-page input[type="radio"]').forEach(radio => {
    radio.addEventListener('change', (e) => {
      const questionNum = e.target.name;
      assessmentData.twoQ[questionNum] = e.target.value === 'true';
      utils.toggleNextButton('2q-page');
    });
  });

  // ติดตามการเปลี่ยนแปลงในแบบประเมิน 9Q
  document.querySelectorAll('#9q-page .option-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const questionNum = btn.dataset.question;
      const value = parseInt(btn.dataset.value);
      assessmentData.nineQ[questionNum] = value;
      utils.toggleNextButton('9q-page');
    });
  });

  // ติดตามการเปลี่ยนแปลงในแบบประเมิน 8Q
  document.querySelectorAll('#8q-page .option-btn').forEach(btn => {
    btn.addEventListener('click', () => {
      const questionNum = btn.dataset.question;
      const value = parseInt(btn.dataset.value);
      assessmentData.eightQ[questionNum] = value;
      utils.toggleNextButton('8q-page');
    });
  });

  // ปุ่มนำทางทั่วไป
  document.querySelectorAll('[data-page]').forEach(btn => {
    btn.addEventListener('click', () => {
      const targetPage = btn.dataset.page;
      const currentPage = document.querySelector('.page.active').id;
      
      // บันทึกข้อมูลก่อนเปลี่ยนหน้า
      utils.saveFormData(currentPage);
      
      // ตรวจสอบว่าหน้านี้สมบูรณ์ก่อนเปลี่ยนหน้า
      if (btn.classList.contains('next-btn') && !utils.isPageComplete(currentPage)) {
        alert('กรุณาตอบคำถามทั้งหมดก่อนไปหน้าถัดไป');
        return;
      }
      
      showPage(targetPage);
    });
  });

  // ปุ่มดูผลลัพธ์
  document.getElementById('view-final-result')?.addEventListener('click', () => {
    showPage('final-result-page');
  });

  // ป้อนข้อมูลอายุ
  document.getElementById('age')?.addEventListener('input', (e) => {
    assessmentData.personalInfo.age = e.target.value;
  });

  // เลือกเพศ
  document.getElementById('gender')?.addEventListener('change', (e) => {
    assessmentData.personalInfo.gender = e.target.value;
  });

  // ป้อนข้อมูลอาชีพ
  document.getElementById('occupation')?.addEventListener('input', (e) => {
    assessmentData.personalInfo.occupation = e.target.value;
  });

  // เลือกคำคม
  document.querySelectorAll('.quote-option').forEach(option => {
    option.addEventListener('click', () => {
      assessmentData.reflection.selectedQuote = option.dataset.quote;
      document.querySelectorAll('.quote-option').forEach(opt => {
        opt.classList.remove('selected');
      });
      option.classList.add('selected');
    });
  });

  // เลือกความรู้สึก
  document.querySelectorAll('.feeling-option').forEach(option => {
    option.addEventListener('click', () => {
      const feeling = option.dataset.feeling;
      const index = assessmentData.reflection.feelings.indexOf(feeling);
      
      if (index === -1) {
        assessmentData.reflection.feelings.push(feeling);
        option.classList.add('selected');
      } else {
        assessmentData.reflection.feelings.splice(index, 1);
        option.classList.remove('selected');
      }
    });
  });

  // ป้องกันการส่งฟอร์ม
  elements.forms.forEach(form => {
    form.addEventListener('submit', (e) => e.preventDefault());
  });
}

// เริ่มต้นเมื่อ DOM โหลดเสร็จ
document.addEventListener('DOMContentLoaded', () => {
  setupEventListeners();
  showPage('welcome-page');
  
  // กำหนดค่าเริ่มต้นให้ปุ่มนำทาง
  utils.toggleNextButton('personal-info-page');
});